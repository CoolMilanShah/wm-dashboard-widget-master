{"version":3,"sources":["components/Layout/StyledComponent.js","components/Layout/SelectDropDown.js","components/Layout/FilterComponent.js","components/Forms/CreateFormik.js","utils/effects.js","utils/propTypes.js","components/Typography.js","components/Page.js","utils/windowDimension.js","components/Layout/CustomDeleteComponent.js","components/Layout/ButtonComponent.js","pages/Documents/TableComponent.js","pages/Documents/reducer.js","pages/Documents/Download.js"],"names":["Divider","styled","div","customStyles","control","provided","width","container","display","textAlign","SelectComponent","props","isMulti","styles","value","onChange","onSelect","options","list","map","listval","label","isDisabled","isClearable","CreatableComponent","FilterComponent","filterobject","filtervalue","style","justifyContent","Object","keys","filter","key","title","selectedOption","filterLabel","onSelectDropDown","onClick","onResetSelection","CreateFormik","fieldMap","initialState","submitButton","submitFlag","deleteflag","editflag","filterComponent","search","isOpen","open","size","toggle","ontoggle","titleVal","className","initialValues","validationSchema","schemaValidation","onSubmit","values","setSubmitting","resetForm","createdatetime","moment","toISOString","fetch","serviceName","method","body","JSON","stringify","headers","then","response","status","json","res","rowCount","onClickSubmit","alert","reason","catch","isSubmitting","handleReset","dirty","errors","element","height","name","render","msg","fontSize","color","textOverflow","overflow","whiteSpace","component","disabled","disabledelement","column","initialstate","keyfield","expensecategory","expenseCategory","vendorlist","selectionlist","hidebutton","type","length","fetchApiCall","a","filterValue","encodeURIComponent","data","fetchApiList","fetchFilterObject","setFilterObject","console","log","prevState","filterList","child","childType","PropTypes","ID","oneOfType","string","number","isRequired","func","date","instanceOf","Date","tagMap","h1","h2","h3","h4","h5","h6","p","lead","blockquote","Typography","TypoComp","Tag","tag","restProps","classes","classNames","defaultProps","bem","bn","create","DivComponent","Page","breadcrumbs","children","b","e","Navbar","light","expand","Nav","navbar","Button","outline","event","preventDefault","stopPropagation","document","querySelector","classList","getWindowDimensions","window","innerWidth","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","CustomDeleteComponent","setSubmitFlag","selectedRows","ele","rowele","push","Modal","ModalHeader","ModalBody","Row","Col","Card","CardBody","paddingBottom","ButtonComponent","Edit","editFlag","Delete","showDialog","setShowDialog","updateType","rowData","servicesavailed","split","trim","onButtonClick","target","editComponent","edittitle","deletetitle","initialMouseState","mouseX","mouseY","initialFlagState","CSV","Email","MenuComponent","mouseState","setMouseState","setFlag","handleClose","Menu","keepMounted","onClose","anchorReference","anchorPosition","top","left","undefined","MenuItem","TableComponent","setRowData","setSelectedRows","showMenu","setShowMenu","menuFlag","params","setApi","columnDefs","makeColumns","isFirstColumn","columnApi","getAllDisplayedColumns","api","exportDataAsCsv","fileName","defaultColDef","resizable","headerCheckboxSelection","checkboxSelection","flexDirection","onContextMenu","rowSelection","overlayLoadingTemplate","overlayNoRowsTemplate","onCellContextMenu","node","setSelected","getSelectedRows","clientX","clientY","onGridReady","sizeColumnsToFit","clientname","pan","category","filename","field","headerName","toUpperCase","sortable","cellRenderer","s3url","CustomComponent","form","setFieldValue","DocDownload","setSelectionList","selectedValue","setSelectedValue","setCategory","setData","clientList","panMap","getData","getFileData","active","Yup","shape","required"],"mappings":"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","file":"static/js/17.f5cca331.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Divider = styled.div`\n  width:10px;\n  height:auto;\n  display:inline-block;\n}`;\n","import React from 'react';\nimport CreatableSelect from 'react-select/creatable';\nimport Select from 'react-select';\n\nconst customStyles = {\n  control: provided => ({\n    ...provided,\n    width: 150,\n  }),\n  container: provided => ({\n    ...provided,\n    display: 'inline-block',\n    textAlign: 'left',\n  }),\n};\n\nexport const SelectComponent = props => {\n  return (\n    <Select\n      isMulti={props.isMulti}\n      styles={customStyles}\n      value={props.value}\n      onChange={props.onSelect}\n      options={props.list.map(listval => {\n        return { value: listval, label: listval };\n      })}\n      isDisabled={props.isDisabled}\n      isClearable={props.isClearable}></Select>\n  );\n};\n\nexport const CreatableComponent = props => {\n  return (\n    <CreatableSelect\n      isClearable\n      styles={customStyles}\n      value={props.value}\n      onChange={props.onSelect}\n      options={props.list.map(listval => {\n        return { value: listval, label: listval };\n      })}\n      isDisabled={props.isDisabled}\n    />\n  );\n};\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport { Divider } from \"./StyledComponent\";\nimport { SelectComponent } from \"./SelectDropDown\";\n\nexport const FilterComponent = props => {\n  const { filterobject, filtervalue } = props;\n  const onSelect = (filterLabel, selectedOption) => {\n    if (props.onSelectDropDown) {\n      props.onSelectDropDown({\n        [filterLabel]: selectedOption.value\n      });\n    }\n  };\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n      <div>\n        {Object.keys(filterobject).map(filter => {\n          return (\n            <div\n              key={filterobject[filter].title}\n              style={{ display: \"inline-block\" }}\n            >\n              <label>{filter}:</label>\n              <Divider />\n              <SelectComponent\n                list={filterobject[filter].list}\n                title={filterobject[filter].title}\n                value={{\n                  label: filtervalue[filter],\n                  value: filtervalue[filter]\n                }}\n                onSelect={selectedOption => onSelect(filter, selectedOption)}\n                {...props}\n              />\n              <Divider />\n            </div>\n          );\n        })}\n      </div>\n      <div>\n        <Button onClick={props.onResetSelection}>Reset</Button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Row,\n  Modal,\n  ModalHeader,\n  ModalBody,\n} from 'reactstrap';\nimport moment from 'moment';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Divider } from '../Layout/StyledComponent';\nimport { FilterComponent } from '../Layout/FilterComponent';\n\nexport const CreateFormik = props => {\n  let fieldMap = props.initialState;\n  let submitButton = 'Submit';\n  let submitFlag = true;\n  if (props.deleteflag) {\n    submitButton = 'Delete';\n  }\n  if (props.editflag) {\n    submitButton = 'Save';\n  }\n  const filtervalue = props.filtervalue || [];\n  if (props.filterComponent) {\n    Object.keys(filtervalue).map(filter => {\n      if (!filtervalue[filter].search('Select')) {\n        submitFlag = false;\n      }\n    });\n  }\n\n  return (\n    <Modal isOpen={props.open} size=\"lg\">\n      <ModalHeader toggle={props.ontoggle}>{props.titleVal}</ModalHeader>\n      <ModalBody>\n        {props.filterComponent ? (\n          <Row>\n            <Col>\n              <Card className=\"mb-3\">\n                <CardBody>\n                  <FilterComponent {...props} />\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        ) : null}\n        <Row>\n          <Col>\n            <Card className=\"mb-3\">\n              <CardBody>\n                {props.initialState ? (\n                  <Formik\n                    initialValues={props.initialState}\n                    validationSchema={props.schemaValidation}\n                    onSubmit={(values, { setSubmitting, resetForm }) => {\n                      values = {\n                        ...values,\n                        createdatetime: moment().toISOString(),\n                      };\n                      setSubmitting(true);\n                      //fetch(`http://52.64.255.41/api/` + props.serviceName, {\n                      fetch(`http://localhost:9080/api/` + props.serviceName, {\n                        method: props.method,\n                        body: JSON.stringify({\n                          ...values,\n                          ...filtervalue,\n                        }),\n                        headers: {\n                          'Content-Type': 'application/json',\n                        },\n                      })\n                        .then(response => {\n                          if (response.status >= 200 && response.status < 300) {\n                            response.json().then(res => {\n                              if (res.rowCount !== 0) {\n                                props.onClickSubmit(values);\n                                switch (props.method) {\n                                  case 'POST':\n                                    alert('Insert Row operation successful');\n                                    break;\n                                  case 'PUT': {\n                                    alert('Update Row operation successful');\n                                    props.ontoggle();\n                                    break;\n                                  }\n                                  default:\n                                }\n                                resetForm();\n                              } else\n                                alert(\n                                  'No Rows Affected. Please check the Filter',\n                                );\n                            });\n                          } else {\n                            response\n                              .json()\n                              .then(res =>\n                                alert(\n                                  `There was an error, please try again, ${res.reason}`,\n                                ),\n                              );\n                          }\n\n                          setSubmitting(false);\n                        })\n                        .catch(() => {\n                          alert('There was an error, please try again');\n                          setSubmitting(false);\n                        });\n                    }}>\n                    {({ isSubmitting, handleReset, dirty, errors }) => (\n                      <Form>\n                        {Object.keys(fieldMap).map(element => {\n                          return (\n                            <div\n                              key={element}\n                              style={{\n                                display: 'inline-block',\n                                height: '100%',\n                              }}>\n                              <ErrorMessage\n                                name={element}\n                                render={msg => (\n                                  <div\n                                    style={{\n                                      fontSize: '0.5em',\n                                      color: 'red',\n                                      width: '200px',\n                                      textOverflow: 'ellipsis',\n                                      overflow: 'hidden',\n                                      whiteSpace: 'nowrap',\n                                    }}>\n                                    {msg}\n                                  </div>\n                                )}\n                              />\n                              <Field\n                                name={element}\n                                component={props.component}\n                                editflag={props.editflag}\n                                deleteflag={props.deleteflag}\n                                disabled={props.disabled}\n                                disabledelement={props.disabledelement}\n                                filterobject={props.filterobject}\n                                filtervalue={filtervalue}\n                                column={props.column}\n                                initialstate={props.initialState}\n                                keyfield={props.keyfield}\n                                expensecategory={props.expenseCategory}\n                                vendorlist={props.vendorlist}\n                                selectionlist={props.selectionlist}\n                              />\n                            </div>\n                          );\n                        })}\n                        <br />\n                        {!props.hidebutton ? (\n                          <div>\n                            <Button\n                              color=\"primary\"\n                              type=\"submit\"\n                              disabled={\n                                Object.keys(errors).length > 0 ||\n                                  !submitFlag ||\n                                  (!props.deleteflag && !dirty)\n                                  ? true\n                                  : false\n                              }>\n                              {submitButton}\n                            </Button>\n                            <Divider />\n                            <Button\n                              color=\"secondary\"\n                              onClick={handleReset}\n                              disabled={!dirty || isSubmitting}>\n                              Reset\n                            </Button>{' '}\n                          </div>\n                        ) : null}\n                      </Form>\n                    )}\n                  </Formik>\n                ) : null}\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </ModalBody>\n    </Modal>\n  );\n};\n","export const fetchApiCall = async (serviceName, filter) => {\n  const filterValue = encodeURIComponent(JSON.stringify(filter));\n  const response = await fetch(\n    //'http://52.64.255.41/api/' + serviceName + '?filterValue=' + filterValue,\n    'http://localhost:9080/api/' + serviceName + '?filterValue=' + filterValue,\n  );\n  const data = await response.json();\n  return data;\n};\n\nexport const fetchApiList = async (serviceName, filter) => {\n  const filterValue = encodeURIComponent(JSON.stringify(filter));\n  const response = await fetch(\n    //'http://52.64.255.41/api/' + serviceName + '?filterValue=' + filterValue,\n    'http://localhost:9080/api/' + serviceName + '?filterValue=' + filterValue,\n  );\n  const data = await response.json();\n\n  const list = data.map(element => {\n    return Object.values(element)[0];\n  });\n  return list;\n};\n\nexport const fetchFilterObject = async (\n  filterLabel,\n  filtervalue,\n  setFilterObject,\n) => {\n  let label = '';\n  let data = [];\n  let list = [];\n  let key = '';\n  console.log(filterLabel);\n  switch (filterLabel) {\n\n    case 'Verticals':\n      label = 'Sub-Verticals';\n      data = await fetchApiCall('managesubverticaldata', filtervalue);\n      key = 'sub-vertical';\n      break;\n    case 'Sub-Verticals':\n      label = 'Vendors';\n      data = await fetchApiCall('managevendordata', filtervalue);\n      key = 'vendor';\n      break;\n    case 'Vendors':\n      label = 'Company';\n      data = await fetchApiCall('managecompanydata', filtervalue);\n      key = 'company';\n      break;\n    case 'Branch':\n      label = 'Branch';\n      data = await fetchApiCall('managebranchdata');\n      key = 'branch';\n      break;\n    default:\n      label = 'Verticals';\n      data = await fetchApiCall('manageverticaldata', filtervalue);\n      key = 'vertical';\n\n  }\n\n  list = data.map(element => {\n    return element[key];\n  });\n\n  setFilterObject(prevState => {\n    const filterList = { ...prevState };\n    filterList[label] = {\n      ...filterList[label],\n      list: list,\n    };\n    let child = filterList[label].childType;\n    while (child) {\n      filterList[child] = {\n        ...filterList[child],\n        list: [],\n      };\n      child = filterList[child].child || null;\n    }\n\n    return filterList;\n  });\n};\n","import PropTypes from \"prop-types\";\n\nexport default {\n  ...PropTypes,\n  ID: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  component: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  date: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string])\n};\n","/* eslint-disable react/require-default-props */\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport PropTypes from \"../utils/propTypes\";\n\nconst tagMap = {\n  h1: \"h1\",\n  h2: \"h2\",\n  h3: \"h3\",\n  h4: \"h4\",\n  h5: \"h5\",\n  h6: \"h6\",\n  \"display-1\": \"h1\",\n  \"display-2\": \"h1\",\n  \"display-3\": \"h1\",\n  \"display-4\": \"h1\",\n  p: \"p\",\n  lead: \"p\",\n  blockquote: \"blockquote\"\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = \"p\";\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types)\n};\n\nTypography.defaultProps = {\n  type: \"p\"\n};\n\nexport default Typography;\n","/* eslint-disable react/no-array-index-key */\nimport React from \"react\";\nimport PropTypes from \"../utils/propTypes\";\nimport bn from \"../utils/bemnames\";\nimport Typography from \"./Typography\";\nimport styled from \"styled-components\";\nimport { Button, Nav, Navbar } from \"reactstrap\";\nimport { MdClearAll } from \"react-icons/md\";\n\nconst bem = bn.create(\"page\");\nconst DivComponent = styled.div`\n  display: inline-block;\n`;\n\nconst Page = ({\n  title,\n  create,\n  breadcrumbs,\n  onClick,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b(\"px-3\", className);\n  const handleSidebarControlButton = event => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    document.querySelector(\".cr-sidebar\").classList.toggle(\"cr-sidebar--open\");\n  };\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <DivComponent className={bem.e(\"header\")}>\n          <Navbar light expand>\n            <Nav navbar className=\"mr-2\">\n              <Button outline onClick={handleSidebarControlButton}>\n                <MdClearAll size={25} />\n              </Button>\n            </Nav>\n          </Navbar>\n        </DivComponent>\n        <DivComponent className={bem.e(\"header\")}>\n          {title && typeof title === \"string\" ? (\n            <Typography type=\"h4\" className={bem.e(\"title\")}>\n              {title}\n            </Typography>\n          ) : (\n            title\n          )}\n        </DivComponent>\n        {create ? (\n          <DivComponent>\n            <Button color=\"primary\" value=\"Create\" onClick={onClick}>\n              Create\n            </Button>\n          </DivComponent>\n        ) : (\n          <div />\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool\n    })\n  )\n};\n\nPage.defaultProps = {\n  tag: \"div\",\n  title: \"\"\n};\n\nexport default Page;\n","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions(),\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Row,\n  Modal,\n  ModalHeader,\n  ModalBody,\n} from 'reactstrap';\nimport { Divider } from '../Layout/StyledComponent';\n\nexport const CustomDeleteComponent = props => {\n  let values = {};\n  const [submitFlag, setSubmitFlag] = useState(false);\n  props.selectedRows.map(ele => {\n    Object.keys(ele).map(rowele => {\n      if (values[rowele]) values[rowele].push(ele[rowele]);\n      else {\n        values[rowele] = [];\n        values[rowele].push(ele[rowele]);\n      }\n    });\n  });\n  const handleSubmit = () => {\n    //fetch(`http://52.64.255.41/api/` + props.serviceName, {\n    fetch(`http://localhost:9080/api/` + props.serviceName, {\n      method: 'DELETE',\n      body: JSON.stringify({\n        ...values,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }).then(response => {\n      if (response.status >= 200 && response.status < 300) {\n        setSubmitFlag(true);\n        response.json().then(res => {\n          if (res.rowCount !== 0) {\n            props.onClickSubmit();\n            props.ontoggle();\n            alert('Delete Row operation successful');\n          } else {\n            alert('No Rows Affected. Please check the Filter');\n            setSubmitFlag(false);\n          }\n        });\n      } else {\n        alert('There was an error, please try again');\n        setSubmitFlag(false);\n      }\n    });\n  };\n  return (\n    <Modal isOpen={props.open} size=\"lg\">\n      <ModalHeader toggle={props.ontoggle}>{props.titleVal}</ModalHeader>\n      <ModalBody>\n        <Row>\n          <Col>\n            <Card className=\"mb-3\">\n              <CardBody>\n                <div style={{ paddingBottom: '10px' }}>\n                  Are you sure to delete {props.selectedRows.length} rows?\n                </div>\n                <div>\n                  <Button\n                    color=\"primary\"\n                    type=\"submit\"\n                    onClick={handleSubmit}\n                    disabled={submitFlag}>\n                    Delete\n                  </Button>\n                  <Divider />\n                  <Button color=\"secondary\" onClick={props.ontoggle}>\n                    Cancel\n                  </Button>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </ModalBody>\n    </Modal>\n  );\n};\n","import React, { useState } from \"react\";\nimport { CreateFormik } from \"../Forms/CreateFormik\";\nimport { CustomDeleteComponent } from \"./CustomDeleteComponent\";\nexport const ButtonComponent = props => {\n  const [showDialog, setShowDialog] = useState({\n    Edit: props.editFlag,\n    Delete: !props.editFlag\n  });\n\n  const initialstate = props.updateType\n    ? { ...props.rowData, [\"new \" + props.keyfield]: \"\" }\n    : { ...props.rowData };\n\n  if (initialstate.servicesavailed) {\n    let value = [];\n    const arrServices = initialstate.servicesavailed.split(\",\");\n    value = arrServices.map(ele => {\n      if (ele !== \"\") return { label: ele.trim(), value: ele.trim() };\n    });\n    initialstate.servicesavailed = value;\n  }\n  const onButtonClick = e => {\n    setShowDialog({\n      ...showDialog,\n      [e.target.value]: !showDialog[e.target.value]\n    });\n  };\n\n  return (\n    <div>\n      {props.editFlag ? (\n        <CreateFormik\n          component={props.editComponent}\n          disabledelement={props.disabledelement}\n          editflag={true}\n          expenseCategory={props.expenseCategory}\n          initialState={initialstate}\n          keyfield={props.keyfield}\n          method=\"PUT\"\n          open={showDialog[\"Edit\"]}\n          serviceName={props.serviceName}\n          titleVal={props.edittitle}\n          ontoggle={() => {\n            onButtonClick({ target: { value: \"Edit\" } });\n          }}\n          filterComponent={false}\n          filterobject={props.filterobject}\n          filtervalue={props.filtervalue}\n          selectionlist={props.selectionlist}\n          vendorlist={props.vendorlist}\n          onClickSubmit={props.onClickSubmit}\n          onResetSelection={props.onResetSelection}\n          onSelectDropDown={props.onSelectDropDown}\n        />\n      ) : (\n        <CustomDeleteComponent\n          method=\"DELETE\"\n          open={showDialog[\"Delete\"]}\n          serviceName={props.serviceName}\n          selectedRows={props.selectedRows}\n          titleVal={props.deletetitle}\n          ontoggle={() => {\n            onButtonClick({ target: { value: \"Delete\" } });\n          }}\n          onClickSubmit={props.onClickSubmit}\n          onResetSelection={props.onResetSelection}\n          onSelectDropDown={props.onSelectDropDown}\n        />\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport { ButtonComponent } from '../../components/Layout/ButtonComponent';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport useWindowDimensions from '../../utils/windowDimension';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\n\nconst initialMouseState = {\n  mouseX: null,\n  mouseY: null,\n};\n\nconst initialFlagState = {\n  Edit: false,\n  Delete: false,\n  CSV: false,\n  Email: false,\n};\n\nconst overlayLoadingTemplate =\n  '<span class=\"ag-overlay-loading-center\">Please wait while your rows are loading</span>';\n\nconst overlayNoRowsTemplate =\n  '<span style=\"padding: 10px; border: 2px solid #444; background: lightgoldenrodyellow;\">No Rows To Show</span>';\n\nconst MenuComponent = ({ mouseState, setMouseState, setFlag }) => {\n  const handleClose = event => {\n    setFlag(prevState => {\n      return { ...prevState, [event]: true };\n    });\n    setMouseState(initialMouseState);\n  };\n  return (\n    <Menu\n      keepMounted\n      open={mouseState.mouseY !== null}\n      onClose={handleClose}\n      anchorReference=\"anchorPosition\"\n      anchorPosition={\n        mouseState.mouseY !== null && mouseState.mouseX !== null\n          ? { top: mouseState.mouseY, left: mouseState.mouseX }\n          : undefined\n      }>\n      <MenuItem onClick={() => handleClose('Delete')}>Delete</MenuItem>\n      <MenuItem onClick={() => handleClose('CSV')}>ExportCSV</MenuItem>\n    </Menu>\n  );\n};\nexport const TableComponent = props => {\n  const [rowData, setRowData] = useState([]);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [mouseState, setMouseState] = useState(initialMouseState);\n  const [showMenu, setShowMenu] = useState(false);\n  const [menuFlag, setFlag] = useState(initialFlagState);\n  const [params, setApi] = useState(null);\n\n  const columnDefs = props.makeColumns(props.data[0]);\n  const { width } = useWindowDimensions();\n  const onContextMenu = params => {\n    params.preventDefault();\n    setShowMenu(false);\n    setMouseState(initialMouseState);\n  };\n  const onCellContextMenu = params => {\n    params.event.preventDefault();\n    params.node.setSelected(true);\n    setRowData(params.node.data);\n    setSelectedRows(params.api.getSelectedRows());\n    setFlag(initialFlagState);\n    setShowMenu(true);\n    setMouseState({\n      mouseX: params.event.clientX - 2,\n      mouseY: params.event.clientY - 4,\n    });\n  };\n\n  const onGridReady = params => {\n    if (width > 800) {\n      params.api.sizeColumnsToFit();\n    }\n\n    setApi(params);\n  };\n  function isFirstColumn(params) {\n    const displayedColumns = params.columnApi.getAllDisplayedColumns();\n    const thisIsFirstColumn = displayedColumns[0] === params.column;\n    return thisIsFirstColumn;\n  }\n  if (menuFlag.CSV) {\n    params.api.exportDataAsCsv({ fileName: props.fileName });\n    setFlag(initialFlagState);\n  }\n\n  const defaultColDef = {\n    resizable: true,\n    headerCheckboxSelection: isFirstColumn,\n    checkboxSelection: isFirstColumn,\n  };\n  return (\n    <div\n      className=\"ag-theme-balham\"\n      style={{\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n      onContextMenu={onContextMenu}>\n      {showMenu ? (\n        <MenuComponent\n          mouseState={mouseState}\n          setMouseState={setMouseState}\n          setFlag={setFlag}\n        />\n      ) : null}\n      <AgGridReact\n        columnDefs={columnDefs}\n        defaultColDef={defaultColDef}\n        rowData={props.data}\n        rowSelection=\"multiple\"\n        overlayLoadingTemplate={overlayLoadingTemplate}\n        overlayNoRowsTemplate={overlayNoRowsTemplate}\n        onCellContextMenu={onCellContextMenu}\n        onGridReady={onGridReady}></AgGridReact>\n      {menuFlag.Delete ? (\n        <ButtonComponent\n          selectedRows={selectedRows}\n          editFlag={menuFlag.Edit}\n          columnDefs={columnDefs}\n          {...props}\n        />\n      ) : null}\n    </div>\n  );\n};\n","export const initialState = {\n  clientname: '',\n  pan: '',\n  category: '',\n  filename: '',\n  createdatetime: null,\n};\n\nexport const makeColumns = () => {\n  return Object.keys(initialState).map(ele => {\n    return {\n      field: ele,\n      headerName: ele.toUpperCase(),\n      filter: 'agTextColumnFilter',\n      sortable: true,\n      resizable: true,\n      cellRenderer:\n        ele === 'filename'\n          ? params => {\n              return `<a href=${params.data.s3url}>${params.data.filename}</a>`;\n            }\n          : null,\n    };\n  });\n};\n","import React, { useState, useEffect } from 'react';\nimport * as Yup from 'yup';\nimport { Button } from 'reactstrap';\nimport Page from '../../components/Page';\nimport { SelectComponent } from '../../components/Layout/SelectDropDown';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Divider } from '../../components/Layout/StyledComponent';\n\nimport { fetchApiCall, fetchApiList } from '../../utils/effects';\nimport { TableComponent } from './TableComponent';\nimport { makeColumns } from './reducer';\n\nconst CustomComponent = ({ field, form, ...props }) => {\n  switch (field.name) {\n    case 'category':\n      return (\n        <label>\n          {field.name.toUpperCase()}: <Divider />\n          <SelectComponent\n            isMulti={false}\n            list={props.category}\n            value={{ label: field.value, value: field.value }}\n            onSelect={value => {\n              value\n                ? form.setFieldValue(field.name, value.value)\n                : form.setFieldValue(field.name, '');\n            }}\n            isClearable={true}\n          />\n          <Divider />\n        </label>\n      );\n    case 'clientname':\n      return (\n        <label>\n          {field.name.toUpperCase()}: <Divider />\n          <SelectComponent\n            isMulti={false}\n            list={props.selectionlist[field.name]}\n            value={{ label: field.value, value: field.value }}\n            onSelect={value => {\n              form.resetForm();\n              form.setFieldValue(field.name, value.value);\n            }}\n          />\n          <Divider />\n        </label>\n      );\n    case 'pan':\n      return (\n        <label>\n          {field.name.toUpperCase()}: <Divider />\n          <SelectComponent\n            isMulti={false}\n            list={\n              props.selectionlist[field.name][form.values.clientname]\n                ? props.selectionlist[field.name][form.values.clientname]\n                : []\n            }\n            value={{ label: field.value, value: field.value }}\n            onSelect={value => {\n              form.setFieldValue(field.name, value.value);\n            }}\n          />\n          <Divider />\n        </label>\n      );\n\n    default:\n  }\n};\n\nexport const DocDownload = () => {\n  const fieldMap = ['clientname', 'pan', 'category'];\n  const [selectionlist, setSelectionList] = useState({\n    clientname: [],\n    pan: {},\n  });\n  const [selectedValue, setSelectedValue] = useState({\n    clientname: '',\n    pan: '',\n    category: '',\n  });\n  const [category, setCategory] = useState([]);\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const getData = async () => {\n      const response = await fetchApiCall('managemiscdata', { type: 'pan' });\n      let clientList = [];\n      let panMap = {};\n      response.map(ele => {\n        clientList.push(ele.name);\n        if (!panMap[ele.name]) panMap[ele.name] = [];\n        panMap[ele.name].push(ele.pan);\n      }, []);\n\n      setSelectionList(prevState => {\n        return { ...prevState, clientname: clientList, pan: panMap };\n      });\n    };\n    getData();\n  }, []);\n  useEffect(() => {\n    const getData = async () => {\n      const response = await fetchApiList('managemiscdata', {\n        type: 'documentcategory',\n      });\n\n      setCategory(response);\n    };\n    getData();\n  }, []);\n  const getFileData = values => {\n    setSelectedValue({ ...values });\n    fetchApiCall('managedocument', { ...values }).then(response => {\n      setData(response);\n    });\n  };\n  return (\n    <Page\n      title={'Download Documents'}\n      breadcrumbs={[{ name: 'Download Documents', active: true }]}>\n      <div\n        style={{\n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n        }}>\n        <Formik\n          initialValues={{\n            clientname: 'Select...',\n            pan: 'Select...',\n            category: 'Select...',\n          }}\n          validationSchema={Yup.object().shape({\n            clientname: Yup.string().required(),\n            pan: Yup.string().required(),\n          })}\n          onSubmit={(values, { setSubmitting }) => {\n            setSubmitting(true);\n            getFileData(values);\n            setSubmitting(false);\n          }}>\n          {({ errors, dirty }) => (\n            <Form>\n              {fieldMap.map(element => {\n                return (\n                  <div\n                    key={element}\n                    style={{\n                      display: 'inline-block',\n                    }}>\n                    <ErrorMessage\n                      name={element}\n                      render={msg => (\n                        <div\n                          style={{\n                            fontSize: '0.5em',\n                            color: 'red',\n                            width: '200px',\n                            textOverflow: 'ellipsis',\n                            overflow: 'hidden',\n                            whiteSpace: 'nowrap',\n                          }}>\n                          {msg}\n                        </div>\n                      )}\n                    />\n                    <Field\n                      name={element}\n                      component={CustomComponent}\n                      selectionlist={selectionlist}\n                      category={category}\n                    />\n                  </div>\n                );\n              })}\n              <Divider />\n              <Divider />\n              <Button\n                color=\"primary\"\n                type=\"submit\"\n                disabled={\n                  Object.keys(errors).length > 0 || !dirty ? true : false\n                }>\n                Submit\n              </Button>\n            </Form>\n          )}\n        </Formik>\n\n        <TableComponent\n          deletetitle={'Delete Files'}\n          data={data}\n          fileName={selectedValue.clientname}\n          serviceName={'managedocument'}\n          makeColumns={makeColumns}\n          onClickSubmit={() => {\n            getFileData(selectedValue);\n          }}\n        />\n      </div>\n    </Page>\n  );\n};\n\nexport default DocDownload;\n"],"sourceRoot":""}