{"version":3,"sources":["components/Layout/SelectDropDown.js","utils/effects.js","utils/propTypes.js","components/Typography.js","components/Page.js","components/Charts/LineChart.js","components/Charts/BarChart.js","components/Charts/StackedBarChart.js","pages/DashboardPage.js"],"names":["customStyles","control","provided","width","container","display","textAlign","SelectComponent","props","isMulti","styles","value","onChange","onSelect","options","list","map","listval","label","isDisabled","isClearable","CreatableComponent","fetchApiCall","serviceName","filter","a","filterValue","encodeURIComponent","JSON","stringify","fetch","response","json","data","fetchApiList","element","Object","values","fetchFilterObject","filterLabel","filtervalue","setFilterObject","key","console","log","prevState","filterList","child","childType","PropTypes","ID","oneOfType","string","number","isRequired","component","func","date","instanceOf","Date","tagMap","h1","h2","h3","h4","h5","h6","p","lead","blockquote","Typography","TypoComp","Tag","tag","className","type","restProps","classes","classNames","defaultProps","bem","bn","create","DivComponent","styled","div","Page","title","onClick","breadcrumbs","children","b","style","justifyContent","e","Navbar","light","expand","Nav","navbar","Button","outline","event","preventDefault","stopPropagation","document","querySelector","classList","toggle","size","color","dropdownDate","dropdownBranch","genLineData","chartData","reduce","acc","lineData","labels","push","labelname","datasets","dataval","backgroundColor","fill","chartOption","responsive","legend","tooltips","intersect","mode","hover","scales","xAxes","gridLines","yAxes","LineChart","useState","selectedBranch","setSelBranch","selectedValue","setSelvalue","setChartData","dataType","lineType","useEffect","data_type","getData","Card","CardHeader","CardBody","genBarData","BarChart","selectedVertical","setSelVertical","verticalList","setVerticalList","barType","displayTitle","Chart","register","ChartjsPluginStacked100","availableColors","dataAll","barData","index","Array","length","indexArr","indexOf","stack","categoryPercentage","splice","plugins","stacked100","enable","StackedBarChart","vertical","unshift","Promise","all","DashboardPage","window","scrollTo","name","active","Row","Col","lg","md","sm","xs","React","Component"],"mappings":"2NAIMA,EAAe,CACnBC,QAAS,SAAAC,GAAQ,kCACZA,GADY,IAEfC,MAAO,OAETC,UAAW,SAAAF,GAAQ,kCACdA,GADc,IAEjBG,QAAS,eACTC,UAAW,WAIFC,EAAkB,SAAAC,GAC7B,OACE,kBAAC,IAAD,CACEC,QAASD,EAAMC,QACfC,OAAQV,EACRW,MAAOH,EAAMG,MACbC,SAAUJ,EAAMK,SAChBC,QAASN,EAAMO,KAAKC,KAAI,SAAAC,GACtB,MAAO,CAAEN,MAAOM,EAASC,MAAOD,MAElCE,WAAYX,EAAMW,WAClBC,YAAaZ,EAAMY,eAIZC,EAAqB,SAAAb,GAChC,OACE,kBAAC,IAAD,CACEY,aAAW,EACXV,OAAQV,EACRW,MAAOH,EAAMG,MACbC,SAAUJ,EAAMK,SAChBC,QAASN,EAAMO,KAAKC,KAAI,SAAAC,GACtB,MAAO,CAAEN,MAAOM,EAASC,MAAOD,MAElCE,WAAYX,EAAMW,e,8KCzCXG,EAAY,uCAAG,WAAOC,EAAaC,GAApB,mBAAAC,EAAA,6DACpBC,EAAcC,mBAAmBC,KAAKC,UAAUL,IAD5B,SAEHM,MAErB,6BAA+BP,EAAc,gBAAkBG,GAJvC,cAEpBK,EAFoB,gBAMPA,EAASC,OANF,cAMpBC,EANoB,yBAOnBA,GAPmB,2CAAH,wDAUZC,EAAY,uCAAG,WAAOX,EAAaC,GAApB,qBAAAC,EAAA,6DACpBC,EAAcC,mBAAmBC,KAAKC,UAAUL,IAD5B,SAEHM,MAErB,6BAA+BP,EAAc,gBAAkBG,GAJvC,cAEpBK,EAFoB,gBAMPA,EAASC,OANF,cAMpBC,EANoB,OAQpBlB,EAAOkB,EAAKjB,KAAI,SAAAmB,GACpB,OAAOC,OAAOC,OAAOF,GAAS,MATN,kBAWnBpB,GAXmB,2CAAH,wDAcZuB,EAAiB,uCAAG,WAC/BC,EACAC,EACAC,GAH+B,qBAAAhB,EAAA,sDAK3BP,EAAQ,GACRe,EAAO,GACPlB,EAAO,GACP2B,EAAM,GACVC,QAAQC,IAAIL,GATmB,KAUvBA,EAVuB,OAYxB,cAZwB,OAiBxB,kBAjBwB,QAsBxB,YAtBwB,QA2BxB,WA3BwB,+BAa3BrB,EAAQ,gBAbmB,UAcdI,EAAa,wBAAyBkB,GAdxB,eAc3BP,EAd2B,OAe3BS,EAAM,eAfqB,oCAkB3BxB,EAAQ,UAlBmB,UAmBdI,EAAa,mBAAoBkB,GAnBnB,eAmB3BP,EAnB2B,OAoB3BS,EAAM,SApBqB,oCAuB3BxB,EAAQ,UAvBmB,UAwBdI,EAAa,oBAAqBkB,GAxBpB,eAwB3BP,EAxB2B,OAyB3BS,EAAM,UAzBqB,oCA4B3BxB,EAAQ,SA5BmB,UA6BdI,EAAa,oBA7BC,eA6B3BW,EA7B2B,OA8B3BS,EAAM,SA9BqB,oCAiC3BxB,EAAQ,YAjCmB,UAkCdI,EAAa,qBAAsBkB,GAlCrB,QAkC3BP,EAlC2B,OAmC3BS,EAAM,WAnCqB,QAuC/B3B,EAAOkB,EAAKjB,KAAI,SAAAmB,GACd,OAAOA,EAAQO,MAGjBD,GAAgB,SAAAI,GACd,IAAMC,EAAU,eAAQD,GACxBC,EAAW5B,GAAX,2BACK4B,EAAW5B,IADhB,IAEEH,KAAMA,IAGR,IADA,IAAIgC,EAAQD,EAAW5B,GAAO8B,UACvBD,GACLD,EAAWC,GAAX,2BACKD,EAAWC,IADhB,IAEEhC,KAAM,KAERgC,EAAQD,EAAWC,GAAOA,OAAS,KAGrC,OAAOD,KA1DsB,4CAAH,2D,iGCtBf,2BACVG,KADL,IAEEC,GAAID,IAAUE,UAAU,CAACF,IAAUG,OAAQH,IAAUI,SAASC,WAC9DC,UAAWN,IAAUE,UAAU,CAACF,IAAUG,OAAQH,IAAUO,OAC5DC,KAAMR,IAAUE,UAAU,CAACF,IAAUS,WAAWC,MAAOV,IAAUG,W,4DCD7DQ,EAAS,CACbC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJ,YAAa,KACb,YAAa,KACb,YAAa,KACb,YAAa,KACbC,EAAG,IACHC,KAAM,IACNC,WAAY,cAKRC,EAAa,SAAC,GAAiD,IAE/DC,EAFqBC,EAAyC,EAA9CC,IAAUC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAASC,EAAgB,iBAC5DC,EAAUC,IAAW,eAAGH,IAASA,GAAQD,GAW/C,OAPEH,EADEC,KAEQA,GAAOZ,EAAOe,GACbf,EAAOe,GAEP,KAGN,kBAACJ,EAAD,iBAAcK,EAAd,CAAyBF,UAAWG,MAS7CP,EAAWS,aAAe,CACxBJ,KAAM,KAGOL,I,EAAAA,I,kHCvCTU,EAAMC,IAAGC,OAAO,QAChBC,EAAeC,IAAOC,IAAV,sDAIZC,EAAO,SAAC,GASP,IARLC,EAQI,EARJA,MACAL,EAOI,EAPJA,OAEAM,GAKI,EANJC,YAMI,EALJD,SACKhB,EAID,EAJJC,IACAC,EAGI,EAHJA,UACAgB,EAEI,EAFJA,SACGd,EACC,iBACEC,EAAUG,EAAIW,EAAE,OAAQjB,GAQ9B,OACE,kBAACF,EAAD,eAAKE,UAAWG,GAAaD,GAC3B,yBAAKgB,MAAO,CAAEvF,QAAS,OAAQwF,eAAgB,kBAC7C,kBAACV,EAAD,CAAcT,UAAWM,EAAIc,EAAE,WAC7B,kBAACC,EAAA,EAAD,CAAQC,OAAK,EAACC,QAAM,GAClB,kBAACC,EAAA,EAAD,CAAKC,QAAM,EAACzB,UAAU,QACpB,kBAAC0B,EAAA,EAAD,CAAQC,SAAO,EAACb,QAbO,SAAAc,GACjCA,EAAMC,iBACND,EAAME,kBAENC,SAASC,cAAc,eAAeC,UAAUC,OAAO,sBAU3C,kBAAC,IAAD,CAAYC,KAAM,SAK1B,kBAAC1B,EAAD,CAAcT,UAAWM,EAAIc,EAAE,WAC5BP,GAA0B,kBAAVA,EACf,kBAAC,EAAD,CAAYZ,KAAK,KAAKD,UAAWM,EAAIc,EAAE,UACpCP,GAGHA,GAGHL,EACC,kBAACC,EAAD,KACE,kBAACiB,EAAA,EAAD,CAAQU,MAAM,UAAUnG,MAAM,SAAS6E,QAASA,GAAhD,WAKF,+BAGHE,IAkBPJ,EAAKP,aAAe,CAClBN,IAAK,MACLc,MAAO,IAGMD,O,gNChFTyB,EAAe,CAAC,UAAW,YAAa,aAAc,UACtDC,EAAiB,CAAC,SAAU,OAAQ,OAEpCC,EAAc,SAAAC,GAClB,OAAOA,EAAUC,QACf,SAACC,EAAKC,GAMJ,OALAD,EAAIE,OAAOC,KAAKF,EAASG,WACzBJ,EAAIK,SAAS,GAAGxF,KAAKsF,KAAKF,EAASK,SACnCN,EAAIK,SAAS,GAAGE,gBAAgBJ,KAAK,QACrCH,EAAIK,SAAS,GAAGvG,MAAQ,GACxBkG,EAAIK,SAAS,GAAGG,MAAO,EAChBR,IAET,CAAEE,OAAQ,GAAIG,SAAU,CAAC,CAAExF,KAAM,GAAI0F,gBAAiB,QAIpDE,EAAc,CAClBC,YAAY,EACZC,OAAQ,CACN1H,SAAS,GAEX2H,SAAU,CACRC,WAAW,EACXC,KAAM,WAERC,MAAO,CACLD,KAAM,SAERE,OAAQ,CACNC,MAAO,CACL,CACEC,UAAW,CACTjI,SAAS,KAIfkI,MAAO,CACL,CACED,UAAW,CACTjI,SAAS,OAUNmI,EAAY,SAAAhI,GACvB,MAAuCiI,mBAAS,OAAhD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAqCF,mBAAS,WAA9C,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOvB,EAAP,KAAkB4B,EAAlB,KAEIC,EAAWvI,EAAMwI,SAsBrB,OAZAC,qBAAU,YACK,uCAAG,WAAML,GAAN,eAAAnH,EAAA,sEACSH,YAAa,sBAAuB,CACzDoH,iBACAE,gBACAM,UAAWH,IAJC,OACRhH,EADQ,OAMd+G,EAAa/G,GANC,2CAAH,sDAQboH,CAAQP,KACP,CAACG,EAAUH,EAAeF,IAG3B,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYzD,MAAO,CAAEvF,QAAS,OAAQwF,eAAgB,kBACpD,8BAAOrF,EAAM+E,OACb,8BACE,kBAAC,IAAD,CACE5E,MAAO,CAAEA,MAAO+H,EAAgBxH,MAAOwH,GACvC7H,SAvBa,SAAAiF,GACrB6C,EAAa7C,EAAEnF,QAuBPI,KAAMiG,KAGV,8BACE,kBAAC,IAAD,CACErG,MAAO,CAAEA,MAAOiI,EAAe1H,MAAO0H,GACtC/H,SAlCiB,SAAAiF,GACzB+C,EAAY/C,EAAEnF,QAkCNI,KAAMgG,MAIZ,kBAACuC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMrH,KAAMgF,EAAYC,GAAYpG,QAAS+G,OCjG/C0B,EAAa,SAAArC,GACjB,OAAOA,EAAUC,QACf,SAACC,EAAKC,GAMJ,OALAD,EAAIE,OAAOC,KAAKF,EAASG,WACzBJ,EAAIK,SAAS,GAAGxF,KAAKsF,KAAKF,EAASK,SACnCN,EAAIK,SAAS,GAAGE,gBAAgBJ,KAAK,WACrCH,EAAIK,SAAS,GAAGvG,MAAQ,GACxBkG,EAAIK,SAAS,GAAGG,MAAO,EAChBR,IAET,CAAEE,OAAQ,GAAIG,SAAU,CAAC,CAAExF,KAAM,GAAI0F,gBAAiB,QAGpDZ,EAAe,CAAC,UAAW,YAAa,aAAc,UACtDC,EAAiB,CAAC,SAAU,OAAQ,OAEpCa,EAAc,CAClBC,YAAY,EACZC,OAAQ,CACN1H,SAAS,GAEX2H,SAAU,CACRC,WAAW,EACXC,KAAM,WAERC,MAAO,CACLD,KAAM,UAIGsB,EAAW,SAAAhJ,GACtB,MAAqCiI,mBAAS,WAA9C,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAuCJ,mBAAS,OAAhD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA2CF,mBAAS,OAApD,mBAAOgB,EAAP,KAAyBC,EAAzB,KACA,EAAkCjB,mBAAS,IAA3C,mBAAOvB,EAAP,KAAkB4B,EAAlB,KACA,EAAwCL,mBAAS,IAAjD,mBAAOkB,EAAP,KAAqBC,EAArB,KAEIb,EAAWvI,EAAMqJ,QAsCrB,OAvBAZ,qBAAU,YACK,uCAAG,WAAML,GAAN,eAAAnH,EAAA,sEACSH,YAAa,sBAAuB,CACzDoH,iBACAE,gBACAa,mBACAP,UAAWH,IALC,OACRhH,EADQ,OAOd+G,EAAa/G,GAPC,2CAAH,sDAUboH,CAAQP,KACP,CAACG,EAAUL,EAAgBE,EAAea,IAE7CR,qBAAU,YACK,uCAAG,4BAAAxH,EAAA,sEACSS,YAAa,qBAAsB,IAD5C,QACRH,EADQ,QAELwF,KAAK,OACdqC,EAAgB7H,GAHF,2CAAH,qDAKboH,KACC,IAGD,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEzD,MAAO,CACLvF,QAAS,OACTwF,eAAgB,gBAChBvF,UAAW,QAEb,8BAAOE,EAAMsJ,cACb,6BACE,8BACE,kBAAC,IAAD,CACEnJ,MAAO,CAAEA,MAAO+H,EAAgBxH,MAAOwH,GACvC7H,SA7CW,SAAAiF,GACrB6C,EAAa7C,EAAEnF,QA6CLI,KAAMiG,KAGV,8BACE,kBAAC,IAAD,CACErG,MAAO,CAAEA,MAAOiI,EAAe1H,MAAO0H,GACtC/H,SAxDW,SAAAiF,GACrB+C,EAAY/C,EAAEnF,QAwDJI,KAAMgG,KAGc,kBAAvBvG,EAAMsJ,aACL,8BACE,kBAAC,IAAD,CACEnJ,MAAO,CAAEA,MAAO8I,EAAkBvI,MAAOuI,GACzC5I,SAvDW,SAAAiF,GACvB4D,EAAe5D,EAAEnF,QAuDLI,KAAM4I,KAGR,OAGR,kBAACL,EAAA,EAAD,KACE,kBAAC,IAAD,CAAKrH,KAAMsH,EAAWrC,GAAYpG,QAAS+G,O,kBC9GnDkC,IAAMC,SAASC,KAEf,IAAMC,EAAkB,CACtB,OACA,OACA,MACA,QACA,SACA,SACA,SACA,OACA,OACA,QACA,OACA,YACA,QACA,QAEIC,EAAU,GAGVZ,EAAa,SAACrC,EAAWyC,GAC7B,IAAIS,EAAUlD,EAAUC,QACtB,SAACC,EAAKnF,EAAMoI,GA0BV,OAvBApI,EAAKjB,KAAI,SAAAqG,GACP,GAAc,IAAVgD,EAIF,OAHAjD,EAAIE,OAAOC,KAAKF,EAASG,WACzBJ,EAAIK,SAAS4C,GAAOnJ,MAAQ,MAC5BiJ,EAAQ5C,KAAKF,EAASK,SACf,EAEJN,EAAIK,SAAS4C,KAChBjD,EAAIK,SAAS4C,GAAS,CACpBpI,KAAMqI,MAAMlD,EAAIE,OAAOiD,QAAQ3C,KAAK,GACpCD,gBAAiB,KAGrB,IAAM6C,EAAWpD,EAAIE,OAAOmD,QAAQpD,EAASG,YAC3B,IAAdgD,IACFpD,EAAIK,SAAS4C,GAAOpI,KAAKuI,GACH,IAAnBnD,EAASK,QAAiByC,EAAQK,IACvCpD,EAAIK,SAAS4C,GAAOzC,MAAO,EAC3BR,EAAIK,SAAS4C,GAAO1C,gBAAgBJ,KAAK2C,EAAgBG,EAAQ,IACjEjD,EAAIK,SAAS4C,GAAOnJ,MAAQyI,EAAaU,EAAQ,GACjDjD,EAAIK,SAAS4C,GAAOK,MAAQ,SAC5BtD,EAAIK,SAAS4C,GAAOM,mBAAqB,KAEpCvD,IAET,CAAEE,OAAQ,GAAIG,SAAU,CAAC,CAAExF,KAAM,GAAI0F,gBAAiB,OAOxD,OAJIyC,EAAQ3C,UACV2C,EAAQ3C,SAASmD,OAAO,EAAG,GAGtBR,GAEHrD,EAAe,CAAC,UAAW,YAAa,aAAc,UAEtDC,EAAiB,CAAC,SAAU,OAAQ,OAEpCa,EAAc,CAClBC,YAAY,EACZC,OAAQ,CACN1H,SAAS,GAEXwK,QAAS,CACPC,WAAY,CAAEC,QAAQ,KAIbC,EAAkB,SAAAxK,GAC7B,MAAuCiI,mBAAS,OAAhD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAqCF,mBAAS,WAA9C,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOvB,EAAP,KAAkB4B,EAAlB,KACA,EAAwCL,mBAAS,IAAjD,mBAAOkB,EAAP,KAAqBC,EAArB,KAEIb,EAAWvI,EAAMqJ,QA6CrB,OApCAZ,qBAAU,YACK,uCAAG,4BAAAxH,EAAA,sEACSS,YAAa,qBAAsB,IAD5C,OACRH,EADQ,OAEd6H,EAAgB7H,GAFF,2CAAH,qDAIboH,KACC,IAEHF,qBAAU,WACoB,IAAxBU,EAAaY,QACF,uCAAG,WAAM3B,GAAN,iBAAAnH,EAAA,6DACRM,EAAW4H,EAAa3I,KAAI,SAAAiK,GAChC,OAAO3J,YAAa,sBAAuB,CACzCoH,iBACAE,gBACAa,iBAAkBwB,EAClB/B,UAAWH,QAINmC,QACP5J,YAAa,sBAAuB,CAClCoH,iBACAE,gBACAa,iBAAkB,MAClBP,UAAWH,KAfD,SAkBKoC,QAAQC,IAAIrJ,GAlBjB,OAkBRE,EAlBQ,OAmBd6G,EAAa7G,GAnBC,2CAAH,qDAsBbkH,CAAQP,KAET,CAACG,EAAUL,EAAgBE,EAAee,IAG3C,kBAACP,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEzD,MAAO,CACLvF,QAAS,OACTwF,eAAgB,gBAChBvF,UAAW,QAEb,8BAAOE,EAAMsJ,cACb,6BACE,8BACE,kBAAC,IAAD,CACEnJ,MAAO,CAAEA,MAAO+H,EAAgBxH,MAAOwH,GACvC7H,SApDW,SAAAiF,GACrB6C,EAAa7C,EAAEnF,QAoDLI,KAAMiG,KAGV,8BACE,kBAAC,IAAD,CACErG,MAAO,CAAEA,MAAOiI,EAAe1H,MAAO0H,GACtC/H,SA/DW,SAAAiF,GACrB+C,EAAY/C,EAAEnF,QA+DJI,KAAMgG,OAKd,kBAACuC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAKrH,KAAMsH,EAAWrC,EAAWyC,GAAe7I,QAAS+G,OCxJ3DwD,E,uKACJ,WAEEC,OAAOC,SAAS,EAAG,K,oBAErB,WACE,OACE,kBAACjG,EAAA,EAAD,CACEZ,UAAU,gBACVa,MAAM,YACNE,YAAa,CAAC,CAAE+F,KAAM,YAAaC,QAAQ,KAC3C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,MAC7B,kBAAC,EAAD,CACEjC,aAAa,gBACbD,QAAQ,yBAIZ,kBAAC8B,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,MAC7B,kBAAC,EAAD,CAAUjC,aAAa,cAAcD,QAAQ,wBAIjD,kBAAC6B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,MAC7B,kBAAC,EAAD,CACEjC,aAAa,2BACbD,QAAQ,yBAIZ,kBAAC8B,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,MAC7B,kBAAC,EAAD,CAAW/C,SAAS,kBAAkBzD,MAAM,oBAG9C,kBAACoG,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,MAC7B,kBAAC,EAAD,CAAW/C,SAAS,cAAczD,MAAM,eAG1C,kBAACoG,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,MAC7B,kBAAC,EAAD,CAAW/C,SAAS,cAAczD,MAAM,qB,GAzCxByG,IAAMC,WAgDnBZ","file":"static/js/21.97034487.chunk.js","sourcesContent":["import React from 'react';\nimport CreatableSelect from 'react-select/creatable';\nimport Select from 'react-select';\n\nconst customStyles = {\n  control: provided => ({\n    ...provided,\n    width: 150,\n  }),\n  container: provided => ({\n    ...provided,\n    display: 'inline-block',\n    textAlign: 'left',\n  }),\n};\n\nexport const SelectComponent = props => {\n  return (\n    <Select\n      isMulti={props.isMulti}\n      styles={customStyles}\n      value={props.value}\n      onChange={props.onSelect}\n      options={props.list.map(listval => {\n        return { value: listval, label: listval };\n      })}\n      isDisabled={props.isDisabled}\n      isClearable={props.isClearable}></Select>\n  );\n};\n\nexport const CreatableComponent = props => {\n  return (\n    <CreatableSelect\n      isClearable\n      styles={customStyles}\n      value={props.value}\n      onChange={props.onSelect}\n      options={props.list.map(listval => {\n        return { value: listval, label: listval };\n      })}\n      isDisabled={props.isDisabled}\n    />\n  );\n};\n","export const fetchApiCall = async (serviceName, filter) => {\n  const filterValue = encodeURIComponent(JSON.stringify(filter));\n  const response = await fetch(\n    //'http://52.64.255.41/api/' + serviceName + '?filterValue=' + filterValue,\n    'http://localhost:9080/api/' + serviceName + '?filterValue=' + filterValue,\n  );\n  const data = await response.json();\n  return data;\n};\n\nexport const fetchApiList = async (serviceName, filter) => {\n  const filterValue = encodeURIComponent(JSON.stringify(filter));\n  const response = await fetch(\n    //'http://52.64.255.41/api/' + serviceName + '?filterValue=' + filterValue,\n    'http://localhost:9080/api/' + serviceName + '?filterValue=' + filterValue,\n  );\n  const data = await response.json();\n\n  const list = data.map(element => {\n    return Object.values(element)[0];\n  });\n  return list;\n};\n\nexport const fetchFilterObject = async (\n  filterLabel,\n  filtervalue,\n  setFilterObject,\n) => {\n  let label = '';\n  let data = [];\n  let list = [];\n  let key = '';\n  console.log(filterLabel);\n  switch (filterLabel) {\n\n    case 'Verticals':\n      label = 'Sub-Verticals';\n      data = await fetchApiCall('managesubverticaldata', filtervalue);\n      key = 'sub-vertical';\n      break;\n    case 'Sub-Verticals':\n      label = 'Vendors';\n      data = await fetchApiCall('managevendordata', filtervalue);\n      key = 'vendor';\n      break;\n    case 'Vendors':\n      label = 'Company';\n      data = await fetchApiCall('managecompanydata', filtervalue);\n      key = 'company';\n      break;\n    case 'Branch':\n      label = 'Branch';\n      data = await fetchApiCall('managebranchdata');\n      key = 'branch';\n      break;\n    default:\n      label = 'Verticals';\n      data = await fetchApiCall('manageverticaldata', filtervalue);\n      key = 'vertical';\n\n  }\n\n  list = data.map(element => {\n    return element[key];\n  });\n\n  setFilterObject(prevState => {\n    const filterList = { ...prevState };\n    filterList[label] = {\n      ...filterList[label],\n      list: list,\n    };\n    let child = filterList[label].childType;\n    while (child) {\n      filterList[child] = {\n        ...filterList[child],\n        list: [],\n      };\n      child = filterList[child].child || null;\n    }\n\n    return filterList;\n  });\n};\n","import PropTypes from \"prop-types\";\n\nexport default {\n  ...PropTypes,\n  ID: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  component: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  date: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string])\n};\n","/* eslint-disable react/require-default-props */\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport PropTypes from \"../utils/propTypes\";\n\nconst tagMap = {\n  h1: \"h1\",\n  h2: \"h2\",\n  h3: \"h3\",\n  h4: \"h4\",\n  h5: \"h5\",\n  h6: \"h6\",\n  \"display-1\": \"h1\",\n  \"display-2\": \"h1\",\n  \"display-3\": \"h1\",\n  \"display-4\": \"h1\",\n  p: \"p\",\n  lead: \"p\",\n  blockquote: \"blockquote\"\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = \"p\";\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types)\n};\n\nTypography.defaultProps = {\n  type: \"p\"\n};\n\nexport default Typography;\n","/* eslint-disable react/no-array-index-key */\nimport React from \"react\";\nimport PropTypes from \"../utils/propTypes\";\nimport bn from \"../utils/bemnames\";\nimport Typography from \"./Typography\";\nimport styled from \"styled-components\";\nimport { Button, Nav, Navbar } from \"reactstrap\";\nimport { MdClearAll } from \"react-icons/md\";\n\nconst bem = bn.create(\"page\");\nconst DivComponent = styled.div`\n  display: inline-block;\n`;\n\nconst Page = ({\n  title,\n  create,\n  breadcrumbs,\n  onClick,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b(\"px-3\", className);\n  const handleSidebarControlButton = event => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    document.querySelector(\".cr-sidebar\").classList.toggle(\"cr-sidebar--open\");\n  };\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <DivComponent className={bem.e(\"header\")}>\n          <Navbar light expand>\n            <Nav navbar className=\"mr-2\">\n              <Button outline onClick={handleSidebarControlButton}>\n                <MdClearAll size={25} />\n              </Button>\n            </Nav>\n          </Navbar>\n        </DivComponent>\n        <DivComponent className={bem.e(\"header\")}>\n          {title && typeof title === \"string\" ? (\n            <Typography type=\"h4\" className={bem.e(\"title\")}>\n              {title}\n            </Typography>\n          ) : (\n            title\n          )}\n        </DivComponent>\n        {create ? (\n          <DivComponent>\n            <Button color=\"primary\" value=\"Create\" onClick={onClick}>\n              Create\n            </Button>\n          </DivComponent>\n        ) : (\n          <div />\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool\n    })\n  )\n};\n\nPage.defaultProps = {\n  tag: \"div\",\n  title: \"\"\n};\n\nexport default Page;\n","import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Card, CardBody, CardHeader } from 'reactstrap';\nimport { SelectComponent } from '../Layout/SelectDropDown';\nimport { fetchApiCall } from '../../utils/effects';\n\nconst dropdownDate = ['Monthly', 'Quarterly', 'HalfYearly', 'Yearly'];\nconst dropdownBranch = ['Mumbai', 'Pune', 'All'];\n\nconst genLineData = chartData => {\n  return chartData.reduce(\n    (acc, lineData) => {\n      acc.labels.push(lineData.labelname);\n      acc.datasets[0].data.push(lineData.dataval);\n      acc.datasets[0].backgroundColor.push('blue');\n      acc.datasets[0].label = '';\n      acc.datasets[0].fill = false;\n      return acc;\n    },\n    { labels: [], datasets: [{ data: [], backgroundColor: [] }] },\n  );\n};\n\nconst chartOption = {\n  responsive: true,\n  legend: {\n    display: false,\n  },\n  tooltips: {\n    intersect: true,\n    mode: 'nearest',\n  },\n  hover: {\n    mode: 'index',\n  },\n  scales: {\n    xAxes: [\n      {\n        gridLines: {\n          display: true,\n        },\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n        },\n      },\n    ],\n  },\n};\n\n\n\n\nexport const LineChart = props => {\n  const [selectedBranch, setSelBranch] = useState('All');\n  const [selectedValue, setSelvalue] = useState('Monthly');\n  const [chartData, setChartData] = useState([]);\n\n  let dataType = props.lineType;\n\n  const SelectHandleChange = e => {\n    setSelvalue(e.value);\n  };\n\n  const onSelectBranch = e => {\n    setSelBranch(e.value);\n  };\n\n  useEffect(() => {\n    const getData = async selectedValue => {\n      const response = await fetchApiCall('managedashboarddata', {\n        selectedBranch,\n        selectedValue,\n        data_type: dataType,\n      });\n      setChartData(response);\n    };\n    getData(selectedValue);\n  }, [dataType, selectedValue, selectedBranch]);\n\n  return (\n    <Card>\n      <CardHeader style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <span>{props.title}</span>\n        <span>\n          <SelectComponent\n            value={{ value: selectedBranch, label: selectedBranch }}\n            onSelect={onSelectBranch}\n            list={dropdownBranch}\n          />\n        </span>\n        <span>\n          <SelectComponent\n            value={{ value: selectedValue, label: selectedValue }}\n            onSelect={SelectHandleChange}\n            list={dropdownDate}\n          />\n        </span>\n      </CardHeader>\n      <CardBody>\n        <Line data={genLineData(chartData)} options={chartOption} />\n      </CardBody>\n    </Card>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Card, CardBody, CardHeader } from 'reactstrap';\nimport { SelectComponent } from '../Layout/SelectDropDown';\nimport { fetchApiCall, fetchApiList } from '../../utils/effects';\n\nconst genBarData = chartData => {\n  return chartData.reduce(\n    (acc, lineData) => {\n      acc.labels.push(lineData.labelname);\n      acc.datasets[0].data.push(lineData.dataval);\n      acc.datasets[0].backgroundColor.push('#6a82fb');\n      acc.datasets[0].label = '';\n      acc.datasets[0].fill = false;\n      return acc;\n    },\n    { labels: [], datasets: [{ data: [], backgroundColor: [] }] },\n  );\n};\nconst dropdownDate = ['Monthly', 'Quarterly', 'HalfYearly', 'Yearly'];\nconst dropdownBranch = ['Mumbai', 'Pune', 'All'];\n\nconst chartOption = {\n  responsive: true,\n  legend: {\n    display: false,\n  },\n  tooltips: {\n    intersect: true,\n    mode: 'nearest',\n  },\n  hover: {\n    mode: 'index',\n  },\n};\n\nexport const BarChart = props => {\n  const [selectedValue, setSelvalue] = useState('Monthly');\n  const [selectedBranch, setSelBranch] = useState('All');\n  const [selectedVertical, setSelVertical] = useState('All');\n  const [chartData, setChartData] = useState([]);\n  const [verticalList, setVerticalList] = useState([]);\n\n  let dataType = props.barType;\n\n  const onSelectPeriod = e => {\n    setSelvalue(e.value);\n  };\n\n  const onSelectBranch = e => {\n    setSelBranch(e.value);\n  };\n\n\n  const onSelectVertical = e => {\n    setSelVertical(e.value);\n  };\n\n  useEffect(() => {\n    const getData = async selectedValue => {\n      const response = await fetchApiCall('managedashboarddata', {\n        selectedBranch,\n        selectedValue,\n        selectedVertical,\n        data_type: dataType,\n      });\n      setChartData(response);\n    };\n\n    getData(selectedValue);\n  }, [dataType, selectedBranch, selectedValue, selectedVertical]);\n\n  useEffect(() => {\n    const getData = async () => {\n      const response = await fetchApiList('manageverticaldata', '');\n      response.push('All');\n      setVerticalList(response);\n    };\n    getData();\n  }, []);\n\n  return (\n    <Card>\n      <CardHeader\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          textAlign: 'end',\n        }}>\n        <span>{props.displayTitle}</span>\n        <div>\n          <span>\n            <SelectComponent\n              value={{ value: selectedBranch, label: selectedBranch }}\n              onSelect={onSelectBranch}\n              list={dropdownBranch}\n            />\n          </span>\n          <span>\n            <SelectComponent\n              value={{ value: selectedValue, label: selectedValue }}\n              onSelect={onSelectPeriod}\n              list={dropdownDate}\n            />\n          </span>\n          {props.displayTitle === 'Gross Revenue' ? (\n            <span>\n              <SelectComponent\n                value={{ value: selectedVertical, label: selectedVertical }}\n                onSelect={onSelectVertical}\n                list={verticalList}\n              />\n            </span>\n          ) : null}\n        </div>\n      </CardHeader>\n      <CardBody>\n        <Bar data={genBarData(chartData)} options={chartOption} />\n      </CardBody>\n    </Card>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Bar, Chart } from 'react-chartjs-2';\nimport { Card, CardBody, CardHeader } from 'reactstrap';\nimport { SelectComponent } from '../Layout/SelectDropDown';\nimport { fetchApiCall, fetchApiList } from '../../utils/effects';\nimport ChartjsPluginStacked100 from 'chartjs-plugin-stacked100';\n\nChart.register(ChartjsPluginStacked100);\n\nconst availableColors = [\n  'blue',\n  'pink',\n  'red',\n  'green',\n  'purple',\n  'orange',\n  'yellow',\n  'teal',\n  'cyan',\n  'white',\n  'gray',\n  'gray-dark',\n  'light',\n  'dark',\n];\nconst dataAll = [];\n\n\nconst genBarData = (chartData, verticalList) => {\n  let barData = chartData.reduce(\n    (acc, data, index) => {\n      // eslint-disable-next-line array-callback-return\n\n      data.map(lineData => {\n        if (index === 0) {\n          acc.labels.push(lineData.labelname);\n          acc.datasets[index].label = 'All';\n          dataAll.push(lineData.dataval);\n          return 1;\n        }\n        if (!acc.datasets[index]) {\n          acc.datasets[index] = {\n            data: Array(acc.labels.length).fill(0),\n            backgroundColor: [],\n          };\n        }\n        const indexArr = acc.labels.indexOf(lineData.labelname);\n        if (indexArr !== -1)\n          acc.datasets[index].data[indexArr] =\n            (lineData.dataval * 100) / dataAll[indexArr];\n        acc.datasets[index].fill = false;\n        acc.datasets[index].backgroundColor.push(availableColors[index - 1]);\n        acc.datasets[index].label = verticalList[index - 1];\n        acc.datasets[index].stack = 'stack1';\n        acc.datasets[index].categoryPercentage = 1;\n      });\n      return acc;\n    },\n    { labels: [], datasets: [{ data: [], backgroundColor: [] }] },\n  );\n\n  if (barData.datasets) {\n    barData.datasets.splice(0, 1);\n  }\n\n  return barData;\n};\nconst dropdownDate = ['Monthly', 'Quarterly', 'HalfYearly', 'Yearly'];\n\nconst dropdownBranch = ['Mumbai', 'Pune', 'All'];\n\nconst chartOption = {\n  responsive: true,\n  legend: {\n    display: true,\n  },\n  plugins: {\n    stacked100: { enable: true },\n  },\n};\n\nexport const StackedBarChart = props => {\n  const [selectedBranch, setSelBranch] = useState('All');\n  const [selectedValue, setSelvalue] = useState('Monthly');\n  const [chartData, setChartData] = useState([]);\n  const [verticalList, setVerticalList] = useState([]);\n\n  let dataType = props.barType;\n\n  const onSelectPeriod = e => {\n    setSelvalue(e.value);\n  };\n\n  const onSelectBranch = e => {\n    setSelBranch(e.value);\n  };\n  useEffect(() => {\n    const getData = async () => {\n      const response = await fetchApiList('manageverticaldata', '');\n      setVerticalList(response);\n    };\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (verticalList.length !== 0) {\n      const getData = async selectedValue => {\n        const response = verticalList.map(vertical => {\n          return fetchApiCall('managedashboarddata', {\n            selectedBranch,\n            selectedValue,\n            selectedVertical: vertical,\n            data_type: dataType,\n\n          });\n        });\n        response.unshift(\n          fetchApiCall('managedashboarddata', {\n            selectedBranch,\n            selectedValue,\n            selectedVertical: 'All',\n            data_type: dataType,\n          }),\n        );\n        const data = await Promise.all(response);\n        setChartData(data);\n      };\n\n      getData(selectedValue);\n    }\n  }, [dataType, selectedBranch, selectedValue, verticalList]);\n\n  return (\n    <Card>\n      <CardHeader\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          textAlign: 'end',\n        }}>\n        <span>{props.displayTitle}</span>\n        <div>\n          <span>\n            <SelectComponent\n              value={{ value: selectedBranch, label: selectedBranch }}\n              onSelect={onSelectBranch}\n              list={dropdownBranch}\n            />\n          </span>\n          <span>\n            <SelectComponent\n              value={{ value: selectedValue, label: selectedValue }}\n              onSelect={onSelectPeriod}\n              list={dropdownDate}\n            />\n          </span>\n        </div>\n      </CardHeader>\n      <CardBody>\n        <Bar data={genBarData(chartData, verticalList)} options={chartOption} />\n      </CardBody>\n    </Card>\n  );\n};\n","import React from 'react';\nimport { Col, Row } from 'reactstrap';\nimport Page from '../components/Page';\nimport { LineChart } from '../components/Charts/LineChart';\nimport { BarChart } from '../components/Charts/BarChart';\nimport { StackedBarChart } from '../components/Charts/StackedBarChart';\n\nclass DashboardPage extends React.Component {\n  componentDidMount() {\n    // this is needed, because InfiniteCalendar forces window scroll\n    window.scrollTo(0, 0);\n  }\n  render() {\n    return (\n      <Page\n        className=\"DashboardPage\"\n        title=\"Dashboard\"\n        breadcrumbs={[{ name: 'Dashboard', active: true }]}>\n        <Row>\n          <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\">\n            <BarChart\n              displayTitle=\"Gross Revenue\"\n              barType=\"GrossRevenueBarData\"\n            />\n          </Col>\n\n          <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\">\n            <BarChart displayTitle=\"Net Revenue\" barType=\"NetRevenueBarData\" />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\">\n            <StackedBarChart\n              displayTitle=\"Gross Revenue Percentage\"\n              barType=\"GrossRevenueBarData\"\n            />\n          </Col>\n\n          <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\">\n            <LineChart lineType=\"ExpenseLineData\" title=\"Total Expenses\" />\n          </Col>\n\n          <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\">\n            <LineChart lineType=\"AUMLineData\" title=\"Total AUM\" />\n          </Col>\n\n          <Col lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\">\n            <LineChart lineType=\"SIPLineData\" title=\"Total SIP\" />\n          </Col>\n        </Row>\n      </Page>\n    );\n  }\n}\nexport default DashboardPage;\n"],"sourceRoot":""}